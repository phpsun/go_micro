// Code generated by protoc-gen-go. DO NOT EDIT.
// source: config.proto

package config

import (
	base "common/proto/base"
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ConfRegions struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Title                string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title"`
	ParentId             int64    `protobuf:"varint,4,opt,name=parent_id,json=parentId,proto3" json:"parent_id"`
	Lat                  float32  `protobuf:"fixed32,5,opt,name=lat,proto3" json:"lat"`
	Lng                  float32  `protobuf:"fixed32,6,opt,name=lng,proto3" json:"lng"`
	OrderNum             int64    `protobuf:"varint,7,opt,name=order_num,json=orderNum,proto3" json:"order_num"`
	IsShow               int64    `protobuf:"varint,8,opt,name=is_show,json=isShow,proto3" json:"is_show"`
	GeoPos               string   `protobuf:"bytes,9,opt,name=geo_pos,json=geoPos,proto3" json:"geo_pos"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfRegions) Reset()         { *m = ConfRegions{} }
func (m *ConfRegions) String() string { return proto.CompactTextString(m) }
func (*ConfRegions) ProtoMessage()    {}
func (*ConfRegions) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{0}
}

func (m *ConfRegions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfRegions.Unmarshal(m, b)
}
func (m *ConfRegions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfRegions.Marshal(b, m, deterministic)
}
func (m *ConfRegions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfRegions.Merge(m, src)
}
func (m *ConfRegions) XXX_Size() int {
	return xxx_messageInfo_ConfRegions.Size(m)
}
func (m *ConfRegions) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfRegions.DiscardUnknown(m)
}

var xxx_messageInfo_ConfRegions proto.InternalMessageInfo

func (m *ConfRegions) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ConfRegions) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ConfRegions) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ConfRegions) GetParentId() int64 {
	if m != nil {
		return m.ParentId
	}
	return 0
}

func (m *ConfRegions) GetLat() float32 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *ConfRegions) GetLng() float32 {
	if m != nil {
		return m.Lng
	}
	return 0
}

func (m *ConfRegions) GetOrderNum() int64 {
	if m != nil {
		return m.OrderNum
	}
	return 0
}

func (m *ConfRegions) GetIsShow() int64 {
	if m != nil {
		return m.IsShow
	}
	return 0
}

func (m *ConfRegions) GetGeoPos() string {
	if m != nil {
		return m.GeoPos
	}
	return ""
}

//
//  GET api/conf/info 获取地区下级
type InfoReq struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoReq) Reset()         { *m = InfoReq{} }
func (m *InfoReq) String() string { return proto.CompactTextString(m) }
func (*InfoReq) ProtoMessage()    {}
func (*InfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{1}
}

func (m *InfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoReq.Unmarshal(m, b)
}
func (m *InfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoReq.Marshal(b, m, deterministic)
}
func (m *InfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoReq.Merge(m, src)
}
func (m *InfoReq) XXX_Size() int {
	return xxx_messageInfo_InfoReq.Size(m)
}
func (m *InfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_InfoReq proto.InternalMessageInfo

func (m *InfoReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type InfoResp struct {
	Regions              *ConfRegions `protobuf:"bytes,1,opt,name=regions,proto3" json:"regions"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *InfoResp) Reset()         { *m = InfoResp{} }
func (m *InfoResp) String() string { return proto.CompactTextString(m) }
func (*InfoResp) ProtoMessage()    {}
func (*InfoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{2}
}

func (m *InfoResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoResp.Unmarshal(m, b)
}
func (m *InfoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoResp.Marshal(b, m, deterministic)
}
func (m *InfoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoResp.Merge(m, src)
}
func (m *InfoResp) XXX_Size() int {
	return xxx_messageInfo_InfoResp.Size(m)
}
func (m *InfoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoResp.DiscardUnknown(m)
}

var xxx_messageInfo_InfoResp proto.InternalMessageInfo

func (m *InfoResp) GetRegions() *ConfRegions {
	if m != nil {
		return m.Regions
	}
	return nil
}

func init() {
	proto.RegisterType((*ConfRegions)(nil), "config.ConfRegions")
	proto.RegisterType((*InfoReq)(nil), "config.InfoReq")
	proto.RegisterType((*InfoResp)(nil), "config.InfoResp")
}

func init() { proto.RegisterFile("config.proto", fileDescriptor_3eaf2c85e69e9ea4) }

var fileDescriptor_3eaf2c85e69e9ea4 = []byte{
	// 314 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x91, 0x41, 0x4f, 0xc2, 0x40,
	0x10, 0x85, 0x69, 0x29, 0x2d, 0x0c, 0x46, 0xc9, 0xa0, 0x71, 0xc5, 0x0b, 0xe9, 0x89, 0xc4, 0x08,
	0x09, 0x9e, 0xbc, 0x4a, 0x3c, 0x70, 0x31, 0xa4, 0x9e, 0xf4, 0xd2, 0x14, 0xba, 0x2c, 0x9b, 0xd0,
	0x9d, 0xda, 0x5d, 0x42, 0xfc, 0xa5, 0xfe, 0x1d, 0xd3, 0xdd, 0x92, 0xa0, 0xb7, 0x79, 0xdf, 0x9b,
	0xbc, 0x9d, 0x99, 0x85, 0x8b, 0x0d, 0xa9, 0xad, 0x14, 0xd3, 0xb2, 0x22, 0x43, 0x18, 0x3a, 0x35,
	0x82, 0x75, 0xa6, 0xb9, 0x63, 0xf1, 0x8f, 0x07, 0xfd, 0x05, 0xa9, 0x6d, 0xc2, 0x85, 0x24, 0xa5,
	0xf1, 0x12, 0x7c, 0x99, 0x33, 0x6f, 0xec, 0x4d, 0xda, 0x89, 0x2f, 0x73, 0x44, 0x08, 0x54, 0x56,
	0x70, 0xe6, 0x8f, 0xbd, 0x49, 0x2f, 0xb1, 0x35, 0x5e, 0x43, 0xc7, 0x48, 0xb3, 0xe7, 0xac, 0x6d,
	0xa1, 0x13, 0x78, 0x0f, 0xbd, 0x32, 0xab, 0xb8, 0x32, 0xa9, 0xcc, 0x59, 0x60, 0x03, 0xba, 0x0e,
	0x2c, 0x73, 0x1c, 0x40, 0x7b, 0x9f, 0x19, 0xd6, 0x19, 0x7b, 0x13, 0x3f, 0xa9, 0x4b, 0x4b, 0x94,
	0x60, 0x61, 0x43, 0x94, 0xa8, 0x03, 0xa8, 0xca, 0x79, 0x95, 0xaa, 0x43, 0xc1, 0x22, 0x17, 0x60,
	0xc1, 0xdb, 0xa1, 0xc0, 0x5b, 0x88, 0xa4, 0x4e, 0xf5, 0x8e, 0x8e, 0xac, 0x6b, 0xad, 0x50, 0xea,
	0xf7, 0x1d, 0x1d, 0x6b, 0x43, 0x70, 0x4a, 0x4b, 0xd2, 0xac, 0x67, 0xc7, 0x09, 0x05, 0xa7, 0x15,
	0xe9, 0xf8, 0x0e, 0xa2, 0xa5, 0xda, 0x52, 0xc2, 0xbf, 0xfe, 0x2f, 0x15, 0x3f, 0x43, 0xd7, 0x59,
	0xba, 0xc4, 0x47, 0x88, 0x2a, 0xb7, 0xbb, 0x6d, 0xe8, 0xcf, 0x87, 0xd3, 0xe6, 0x68, 0x67, 0x67,
	0x49, 0x4e, 0x3d, 0xf3, 0x0f, 0x08, 0x17, 0xd6, 0xc6, 0x18, 0x82, 0x95, 0x54, 0x02, 0xfb, 0x53,
	0x7b, 0xce, 0xd7, 0xa2, 0x34, 0xdf, 0xa3, 0x73, 0x11, 0xb7, 0xf0, 0x01, 0x82, 0xfa, 0x21, 0xbc,
	0x3a, 0x65, 0x36, 0x13, 0x8d, 0x06, 0x7f, 0x81, 0x2e, 0xe3, 0xd6, 0xcb, 0xcd, 0xe7, 0x70, 0x43,
	0x45, 0x41, 0x6a, 0x66, 0xbf, 0x66, 0xe6, 0x3a, 0xd6, 0xa1, 0x55, 0x4f, 0xbf, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x8a, 0xa8, 0x1b, 0x82, 0xcc, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConfigClient is the client API for Config service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConfigClient interface {
	Ping(ctx context.Context, in *base.Empty, opts ...grpc.CallOption) (*base.Empty, error)
	Info(ctx context.Context, in *InfoReq, opts ...grpc.CallOption) (*InfoResp, error)
}

type configClient struct {
	cc *grpc.ClientConn
}

func NewConfigClient(cc *grpc.ClientConn) ConfigClient {
	return &configClient{cc}
}

func (c *configClient) Ping(ctx context.Context, in *base.Empty, opts ...grpc.CallOption) (*base.Empty, error) {
	out := new(base.Empty)
	err := c.cc.Invoke(ctx, "/config.Config/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configClient) Info(ctx context.Context, in *InfoReq, opts ...grpc.CallOption) (*InfoResp, error) {
	out := new(InfoResp)
	err := c.cc.Invoke(ctx, "/config.Config/Info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConfigServer is the server API for Config service.
type ConfigServer interface {
	Ping(context.Context, *base.Empty) (*base.Empty, error)
	Info(context.Context, *InfoReq) (*InfoResp, error)
}

// UnimplementedConfigServer can be embedded to have forward compatible implementations.
type UnimplementedConfigServer struct {
}

func (*UnimplementedConfigServer) Ping(ctx context.Context, req *base.Empty) (*base.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedConfigServer) Info(ctx context.Context, req *InfoReq) (*InfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Info not implemented")
}

func RegisterConfigServer(s *grpc.Server, srv ConfigServer) {
	s.RegisterService(&_Config_serviceDesc, srv)
}

func _Config_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(base.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.Config/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServer).Ping(ctx, req.(*base.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Config_Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServer).Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.Config/Info",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServer).Info(ctx, req.(*InfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Config_serviceDesc = grpc.ServiceDesc{
	ServiceName: "config.Config",
	HandlerType: (*ConfigServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _Config_Ping_Handler,
		},
		{
			MethodName: "Info",
			Handler:    _Config_Info_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "config.proto",
}
